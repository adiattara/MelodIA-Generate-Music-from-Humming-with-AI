version: '3.8'

services:
  backend:
    build:
      context: ./backend
    volumes:
      - ./data:/app/data
    depends_on:
      - db
    # Pas de port exposé vers le host : uniquement joignable depuis front_back
    networks:
      front_back:
      back_db:
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - MODEL_NAME=${MODEL_NAME}
      - MODEL_MAX_LEN=${MODEL_MAX_LEN}
      - MODEL_TEMP=${MODEL_TEMP}
      - MODEL_TOP_P=${MODEL_TOP_P}
      - MODEL_TOP_K=${MODEL_TOP_K}
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
    volumes:
      - ./data:/app/data
    # Front accessible depuis le host
    ports:
      - "8502:8501"
    depends_on:
      - backend
    networks:
      - front_back
    environment:
      - API_URL=${API_URL}
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - back_db
    restart: unless-stopped

volumes:
  pgdata:

networks:
  front_back:
    driver: bridge
  back_db:
    driver: bridge
    internal: true   # même isolation pour la base

